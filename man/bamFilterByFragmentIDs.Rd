% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filterBam.R
\name{bamFilterByFragmentIDs}
\alias{bamFilterByFragmentIDs}
\title{Flitering a bam file by read names (fragment ids)}
\usage{
bamFilterByFragmentIDs(bfl, FragmentID, outputName = "output_bam",
  readFiltering = "all", tagFiltering = c("NH", "HI"),
  mapper = c("tophat", "bwa"))
}
\arguments{
\item{bfl}{A bam file}

\item{FragmentID}{A table of read names with additional colnums for tag information depending on user filtering option. The first column should be fragment ids. currently only NH and HI tags are availbe.}

\item{outputName}{An output file name}

\item{readFiltering}{"unique": it will produce only uniquely mapped reads with 'NH==1' tag from the input 'FragmentID'. "all": all reads from the input 'FragmentID'.  "FALSE": currently not available.}

\item{tagFiltering}{When an 'readFiltering' is 'FLASE', it will use a tagFilering. Currently, only "NH" and "HI" tags are usable. To use this option, the 'FragmentID' table should have columns with the same names of tags.}

\item{mapper}{a name of mapping tool. currently, tophat and bwa are available}
}
\description{
This filters a bam by a table with read names and tags(NH, HI, etc.). 
An input table can be an output from a function, 'bamByFeatures'.
}
\examples{
# Input data: a bam file and fragment ids
bfl <- system.file("extdata", "MHC_PGF.bam", package = "HapTag")
# FragmentID: Input table, It's an output from a function 'tagReads'. 
# The first column should be read names. 
FragmentID <- system.file("extdata", "assignedTags.txt", package = "HapTag")
# To filter a bam with uniquely mapped reads.
bamFilterByFragmentIDs(bfl, FragmentID, outputName="output_bam", 
		readFiltering="unique", tagFiltering=c("NH", "HI"), mapper="tophat" )
}
